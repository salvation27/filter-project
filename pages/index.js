import { useState,useEffect } from 'react';
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Link from 'next/link'
import CatBtn from '../components/CatBtn/CatBtn'
import TechBtn from '../components/TechBtn/Tech';
import SerchInput from '../components/SerchInput/SerchInput';


export const getStaticProps = async () => {
  try {
    const res = await fetch(`${process.env.API_HOST}/products`);
  const data = await res.json();

  let tmpArray = [];

  function itemCheck(item) {
      if (tmpArray.indexOf(item.category) === -1) {
          tmpArray.push(item.category);
          return true
      }
      return false;
  }
  function itemCheck1(item) {
    if (tmpArray.indexOf(item.tehnologies) === -1) {
        tmpArray.push(item.tehnologies);
        return true
    }
    return false;
  }


let resCat = data.filter((item) => itemCheck(item)).map(x => x.category);
let resTehnologies = data.filter((item) => itemCheck1(item)).map(x => x.tehnologies);

  return {
    props:{
      products:data,
      cat:resCat,
      techologies:resTehnologies
    }
  };
  } catch  {
   return{
    props:{
      products:data,
      cat:resCat,
      techologies:resTehnologies
    }
   }
  }
}



export default function Home({products,cat,techologies}) {

  const [categ,setCateg] = useState(null)
  const [inputSearch, setInputSearch] = useState("");
  const [checBox, setChecBox] = useState( 
    techologies.map((item,i)=>{
      return (
        {
          label:item,
          checked:false,
          id:i
        }
      )
    }));


const clerCateg = ()=> {
  setCateg(null)
}

const handelChangeChecked = (id) => {
  const checBoxList = checBox;
  const chengeChecedchec = checBoxList.map((item) =>
    item.id === id ? { ...item, checked: !item.checked } : item
  );
  setChecBox(chengeChecedchec);
};



  const [catActive,setCatActiv] = useState(false)
  const [filter,setFilter] = useState([])

  const handleSelectCat = (value)=> { 
        return (!value ? null : setCateg(value)) 
    }

  const handelInputChange = (e) => {
    setInputSearch(e.target.value)
  }

  const applyFilters = () => {
    let updatedList = products;
    // фильтер по категориям

    if (categ) {
      updatedList = updatedList.filter((item) => item.category === categ);
    }

// фильтрация по чекбоксу

    const cusineCheced = checBox
    .filter((item) => item.checked)
    .map((item) => item.label.toLowerCase());

    if (cusineCheced.length) {
      updatedList = updatedList.filter((item) =>{
          return cusineCheced.includes(item.tehnologies)
      }
        
      );
    }

// поиск по инпуту

if (inputSearch) {
  updatedList = updatedList.filter(
    (item) =>
      item.name.toLowerCase().search(inputSearch.toLowerCase().trim()) !==
      -1
  );
}



    setFilter(updatedList);
  };

  // useEffect(() => {
  //   applyFilters();
  // }, [categ,checBox,inputSearch]);
  
 useEffect(() => {
   applyFilters();
   }, [categ,inputSearch]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="button_wrap">
        <SerchInput  value={inputSearch} handelInputChange={handelInputChange} /><br />
        <CatBtn categ={categ} cat={cat} handleSelectCat={handleSelectCat} catActive={catActive} clerCateg={clerCateg} />
        <TechBtn handelChangeChecked={handelChangeChecked} checBox={checBox} />

      </div>
      <div className="product_wrap">

      {
        filter.map(item=>{
            return (
              <Link href='/products/[id]' key ={item.id} as={`/products/${item.id}`} >
                <div  style={{border:'1px solid red',width:'300px'}}>
                    <div className="product_item">{item.name}</div>
                    <div className="product_item">{item.price}</div>
                </div>
              </Link>
            )
          })
        }
      </div>

    </div>
  )
}
